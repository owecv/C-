#include <iostream>
#include <list>
#include <string>
#include <stdlib.h>
#include <string.h>
#include <sstream>
using namespace std;

//键盘输入
class Shuru
{
public:
	Shuru(string, int=0);
	void function();//返回输入了几个单词
	void SetShuRu() 
	{ 
		cin.clear();
		cin.ignore(100, '\n');
		stringstream ss;
		getline(cin, shuru); 
		ss.clear();
	}
	void Divide();//将键盘输入的内容转换为单个的单词

	int count;//记录输入了几个项
	list<string> Word;
private:
	string shuru;
	int curr;//记录当前指针的位置
};

Shuru::Shuru(string shuru,int count)
{
	this->shuru = shuru;
	this->count = count;
}

void Shuru::function()
{
	for (int i = 0;i < shuru.length();++i)
	{
		if (shuru.at(i) == ' ')
		{
			++count;
		}
	}
	++ count;
}

void Shuru::Divide()//将键盘输入的内容转换为单个的单词
{
	string temp;
	stringstream ss;
	ss.clear();
	ss.str(shuru);
	for (int i = 0;i < count;++i)
	{
		ss >> temp;
		Word.push_back(temp);
	}
}

class phone_number
{
public:
	phone_number(string="无", string = "无",string="无", string = "无", string = "无");
	void Display() { 
		cout << "姓名：" << name << "\t" << "电话号码：" << PhoneNumber << "\t" << "工作单位：" << job << "\t" << "家庭住址：" << addr << "\t" << "备注：" << beizhu << endl;
		}
//private:
	string name;//姓名
	string PhoneNumber;//电话号码
	string job;//工作单位
	string addr;//家庭住址
	string beizhu;//备注
};

phone_number::phone_number(string name,string PhoneNumber, string job, string addr, string beizhu)
{
	this->name = name;
	this->PhoneNumber = PhoneNumber;
	this->job = job;
	this->addr = addr;
	this->beizhu = beizhu;
}

class PhoneBook
{
public:
	void UI();
private:
	int GUI();
	void Display();//1：显示电话簿中的联系人
	void InsertPhoneNumber(phone_number);//2：增加联系人
	void Revise() {}//3：修改联系人信息
	void Delete(string);//4：删除联系人
	void find(string);//5：查找联系人
	list<phone_number> Book;
};

int PhoneBook::GUI()
{
	cout << "***************欢迎使用电话簿小程序***************" << endl
		<< "*              请选择要使用的功能：              *" << endl
		<< "*              1：显示电话簿中的联系人           *" << endl
		<< "*              2：增加联系人                     *" << endl
		<< "*              3：修改联系人信息                 *" << endl
		<< "*              4：删除联系人                     *" << endl
		<< "*              5：查找联系人                     *" << endl
		<< "*              6：退出程序                       *" << endl
		<< "**************************************************" << endl
		<< endl;
	int n;
	cin >> n;
	try {
		if (cin.fail())
			throw 1;
	}
	catch (int) {
		cin.clear();
		cin.ignore(100, '\n');
		cout << "You can only enter numbers!" << endl;
		cout << "Enter a number:" << endl;
		cin >> n;
	}
	return n;
}

void PhoneBook::UI()
{
	while (1)
	{
		int select = GUI();
		switch (select)
		{
			case 1:Display();break;//1：显示电话簿中的联系人
			case 2: //2：增加联系人 
			{
				phone_number temp;
				cout << "请输入联系人信息（姓名，电话号码,工作，家庭地址，备注）：" << endl;
				Shuru MyShuRu("",0);//记录从键盘上读取的信息
				//cin >> MyShuRu.shuru;
				MyShuRu.SetShuRu();
				MyShuRu.function();
				MyShuRu.Divide();
				if (MyShuRu.count == 1)
				{
					list<string>::iterator it = MyShuRu.Word.begin();
					temp.name=*it;
				}
				if (MyShuRu.count == 2)
				{
					list<string>::iterator it = MyShuRu.Word.begin();
					temp.name = *it;
					temp.PhoneNumber = *++it;
				}
				if (MyShuRu.count == 3)
				{
					list<string>::iterator it = MyShuRu.Word.begin();
					temp.name = *it;
					temp.PhoneNumber = *++it;
					temp.job = *++it;
				}
				if (MyShuRu.count == 4)
				{
					list<string>::iterator it = MyShuRu.Word.begin();
					temp.name = *it;
					temp.PhoneNumber = *++it;
					temp.job = *++it;
					temp.addr = *++it;
				}
				if (MyShuRu.count == 5)
				{
					list<string>::iterator it = MyShuRu.Word.begin();
					temp.name = *it;
					temp.PhoneNumber = *++it;
					temp.job = *++it;
					temp.addr = *++it;
					temp.beizhu = *++it;
				}
				//cin >> temp.name >> temp.PhoneNumber >> temp.job >> temp.addr >> temp.beizhu;
				InsertPhoneNumber(temp);
			}break;
			//3：修改联系人信息
			case 3:cout << "暂不支持此功能！请选择“删除”，后重新添加该联系人！" << endl;break;
			//4：删除联系人
			case 4: {
				cout << "请输入要删除联系人的姓名：";
				string temp;
				cin >> temp;
				Delete(temp);//4：删除联系人
			}break;
			//5：查找联系人
			case 5: {
				cout << "请输入要查找联系人的姓名：";
				string temp;
				cin >> temp;
				find(temp);//5：查找联系人
			}break;
			//6：退出程序
			case 6:exit(0);break;
			default: cout << "请输入正确选项！";
		}
#if 0
		if (select == 6)
		{
			exit(0);
		}
		if (select == 1)
		{
			Display();
		}
		if (select == 2)
		{
			phone_number temp;
			cout << "请输入联系人信息（姓名，电话号码,工作，家庭地址，备注）：" << endl;
			//Shuru MyShuRu("jkn",0);//记录从键盘上读取的信息
			//getline(cin, MyShuRu.shuru);
			cin >> temp.name >> temp.PhoneNumber>>temp.job>>temp.addr>>temp.beizhu;
			InsertPhoneNumber(temp);
		}
		if (select == 3)
		{
			cout << "暂不支持此功能！请选择“删除”，后重新添加该联系人！" << endl;
		}
		if (select == 4)
		{
			cout << "请输入要删除联系人的姓名：";
			string temp;
			cin >> temp;
			Delete(temp);//4：删除联系人
		}
		if (select == 5)
		{
			cout << "请输入要查找联系人的姓名：";
			string temp;
			cin >> temp;
			find(temp);//5：查找联系人
		}
#endif
	}
}

void PhoneBook::Display()//1：显示电话簿中的联系人
{
	if (Book.empty())
	{
		cout << "无任何联系人信息" << endl;
	}
	else
	{
		list<phone_number>::iterator it=Book.begin();
		while (it!=Book.end())
		{
			it->Display();
			++it;
		}
	}
}

void PhoneBook::InsertPhoneNumber(phone_number information)//2：增加联系人
{
	Book.push_front(information);
}

void PhoneBook::Delete(string name)//4：删除联系人
{
	list<phone_number>::iterator it = Book.begin();
	while (it != Book.end())
	{
		if (!strcmp(name.c_str(), (*it).name.c_str()))
		{
			Book.erase(it);
			break;
		}
		++it;
	}
}

void PhoneBook::find(string name)//5：查找联系人
{
	list<phone_number>::iterator it = Book.begin();
	while (it != Book.end())
	{
		if (!strcmp(name.c_str(), (*it).name.c_str()))
		{
			cout << it->name << "\t" << it->PhoneNumber << "\t" << it->job << "\t" << it->addr << "\t" << it->beizhu << endl;
			return;
		}
		++it;
	}
	cout << "无此联系人！"<<endl;
}

int main()
{
	PhoneBook MyBook;
	MyBook.UI();
	return  0;
}